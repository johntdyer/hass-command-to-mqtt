name: Buildername: Builder



env:env:

  BUILD_ARGS: "--test"  BUILD_ARGS: "--test"

  MONITORED_FILES: "build.yaml config.yaml Dockerfile rootfs"  MONITORED_FILES: "build.yaml config.yaml Dockerfile rootfs"



on:on:

  push:  push:

    branches:    branches:

      - main      - main

  pull_request:  pull_request:

    branches:    branches:

      - main      - main



jobs:jobs:

  init:  init:

    runs-on: ubuntu-latest    runs-on: ubuntu-latest

    name: Initialize builds    name: Initialize builds

    outputs:    outputs:

      changed_addons: ${{ steps.changed_addons.outputs.addons }}      changed_addons: ${{ steps.changed_addons.outputs.addons }}

      changed: ${{ steps.changed_addons.outputs.changed }}      changed: ${{ steps.changed_addons.outputs.changed }}

    steps:    steps:

      - name: Check out the repository      - name: Check out the repository

        uses: actions/checkout@v4        uses: actions/checkout@v4



      - name: Get changed files      - name: Get changed files

        id: changed_files        id: changed_files

        uses: jitterbit/get-changed-files@v1        uses: jitterbit/get-changed-files@v1



      - name: Find add-on directories      - name: Find add-on directories

        id: changed_addons        id: changed_addons

        run: |        run: |

          declare -a changed_addons          declare -a changed_addons

          for file in ${{ steps.changed_files.outputs.all }}; do          for file in ${{ steps.changed_files.outputs.all }}; do

            if [[ $file =~ ^(.+)/config.yaml$ ]]; then            if [[ $file =~ ^(.+)/config.yaml$ ]]; then

              addon="${BASH_REMATCH[1]}"              addon="${BASH_REMATCH[1]}"

              if [[ ! " ${changed_addons[@]} " =~ " ${addon} " ]]; then              if [[ ! " ${changed_addons[@]} " =~ " ${addon} " ]]; then

                changed_addons+=("\"$addon\"")                changed_addons+=("\"$addon\"")

              fi              fi

            fi            fi

          done          done

                    

          changed=$(printf "%s," "${changed_addons[@]}")          changed=$(printf "%s," "${changed_addons[@]}")

          changed="[${changed%,}]"          changed="[${changed%,}]"

                    

          if [[ ${#changed_addons[@]} -gt 0 ]]; then          if [[ ${#changed_addons[@]} -gt 0 ]]; then

            echo "Changed add-ons: $changed"            echo "Changed add-ons: $changed"

            echo "changed=true" >> $GITHUB_OUTPUT            echo "changed=true" >> $GITHUB_OUTPUT

          else          else

            echo "No add-ons changed"            echo "No add-ons changed"

            echo "changed=false" >> $GITHUB_OUTPUT            echo "changed=false" >> $GITHUB_OUTPUT

          fi          fi

                    

          echo "addons=$changed" >> $GITHUB_OUTPUT          echo "addons=$changed" >> $GITHUB_OUTPUT



  build:  build:

    needs: init    needs: init

    runs-on: ubuntu-latest    runs-on: ubuntu-latest

    if: needs.init.outputs.changed == 'true'    if: needs.init.outputs.changed == 'true'

    name: Build ${{ matrix.addon }} add-on (${{ matrix.arch }})    name: Build ${{ matrix.addon }} add-on (${{ matrix.arch }})

    strategy:    strategy:

      matrix:      matrix:

        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}

        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]

    steps:    steps:

      - name: Check out repository      - name: Check out repository

        uses: actions/checkout@v4        uses: actions/checkout@v4



      - name: Get information      - name: Get information

        id: info        id: info

        uses: home-assistant/actions/helpers/info@master        uses: home-assistant/actions/helpers/info@master

        with:        with:

          path: "./${{ matrix.addon }}"          path: "./${{ matrix.addon }}"



      - name: Check if add-on should be built      - name: Check if add-on should be built

        id: check        id: check

        run: |        run: |

          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then

             echo "build_arch=true" >> $GITHUB_OUTPUT             echo "build_arch=true" >> $GITHUB_OUTPUT

             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT

             if [[ -z "${{ github.head_ref }}" ]] && [[ "${{ github.event_name }}" == "push" ]]; then             if [[ -z "${{ github.head_ref }}" ]] && [[ "${{ github.event_name }}" == "push" ]]; then

                 echo "BUILD_ARGS=" >> $GITHUB_ENV                 echo "BUILD_ARGS=" >> $GITHUB_ENV

             fi             fi

           else           else

             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build"             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build"

             echo "build_arch=false" >> $GITHUB_OUTPUT             echo "build_arch=false" >> $GITHUB_OUTPUT

          fi          fi



      - name: Login to GitHub Container Registry      - name: Login to GitHub Container Registry

        if: env.BUILD_ARGS != '--test'        if: env.BUILD_ARGS != '--test'

        uses: docker/login-action@v3        uses: docker/login-action@v3

        with:        with:

          registry: ghcr.io          registry: ghcr.io

          username: ${{ github.repository_owner }}          username: ${{ github.repository_owner }}

          password: ${{ secrets.GITHUB_TOKEN }}          password: ${{ secrets.GITHUB_TOKEN }}



      - name: Build ${{ matrix.addon }} add-on      - name: Build ${{ matrix.addon }} add-on

        if: steps.check.outputs.build_arch == 'true'        if: steps.check.outputs.build_arch == 'true'

        uses: home-assistant/builder@2024.03.0        uses: home-assistant/builder@2024.03.0

        with:        with:

          args: |          args: |

            ${{ env.BUILD_ARGS }} \            ${{ env.BUILD_ARGS }} \

            --${{ matrix.arch }} \            --${{ matrix.arch }} \

            --target /data/${{ matrix.addon }} \            --target /data/${{ matrix.addon }} \

            --image "${{ steps.check.outputs.image }}" \            --image "${{ steps.check.outputs.image }}" \

            --docker-hub "ghcr.io/${{ github.repository_owner }}" \            --docker-hub "ghcr.io/${{ github.repository_owner }}" \

            --addon            --addon

  build:
    needs: init
    runs-on: ubuntu-latest
    if: needs.init.outputs.changed == 'true'
    name: Build ${{ matrix.addon }} add-on (${{ matrix.arch }})
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        run: |
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             echo "build_arch=true" >> $GITHUB_OUTPUT
             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT
             if [[ -z "${{ github.head_ref }}" ]] && [[ "${{ github.event_name }}" == "push" ]]; then
                 echo "BUILD_ARGS=" >> $GITHUB_ENV
             fi
           else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build"
             echo "build_arch=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GitHub Container Registry
        if: env.BUILD_ARGS != '--test'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2024.03.0
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
        env:
          CAS_API_KEY: ${{ secrets.CAS_TOKEN }}